#!/usr/bin/env python

import PreludeEasy
from PreludeEasy import ConnectionPool, Connection
import gobject, gtk, pynotify

from PreludeNotify import notifyaction, pnstatusicon, pnconfig, threshold

Notify = notifyaction.PreludeNotify()
config = pnconfig.PnConfig()

def _expire_cb(item):
    idmef = item.idmef

    if item.count > 1:
        cstr = "%d x " % item.count
    else:
        cstr = ""

    baseuri = "file://" + pnconfig.themespath + config.get("ui", "theme") + "/"
    severity = idmef.Get("alert.assessment.impact.severity")

    urgency = None
    imageuri = None
    for i in (("high", pynotify.URGENCY_CRITICAL),
              ("medium", pynotify.URGENCY_NORMAL),
              ("low", pynotify.URGENCY_LOW),
              ("info", None)):
        if severity == i[0]:
            imageuri = baseuri + i[0] + ".png"
            urgency = i[1]
            break

    if severity:
        imageuri = "file://" + pnconfig.themespath + config.get("ui", "theme") + "/" + severity + ".png"
    else:
        imageuri = None

    src = cstr + (idmef.Get("alert.source(0).node.address(0).address") or "(unknown)")
    cl = idmef.Get("alert.classification.text") or "(unknown)"

    desc = idmef.Get("alert.assessment.impact.description")
    if desc:
        desc = "<b>" + cl + "</b>\n" + desc
    else:
        desc = cl

    Notify.run(imageuri, urgency, src, desc)


thresholding = threshold.Threshold(_expire_cb)


c = PreludeEasy.ClientEasy("prelude-notify", PreludeEasy.Client.IDMEF_READ)
c.SetFlags(PreludeEasy.Client.CONNECT)
pool = c.GetConnectionPool()
manager_addresses = config.get("manager", "addresses").split(',')
for addr in manager_addresses:
        pool.AddConnection(Connection(addr))

c.Start()

def PollIDMEF():
        idmef = PreludeEasy.IDMEF()

        ret = c.RecvIDMEF(idmef, 100)
        if ret and not idmef.Get("heartbeat.create_time"):
                thresholding.thresholdMessage(idmef)

        return 1

statusicon = pnstatusicon.PreludeStatusIcon(config)
gobject.idle_add(PollIDMEF)
gtk.main()

